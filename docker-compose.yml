# Copyright (c) Jupyter Development Team.
# Distributed under the terms of the Modified BSD License.

# JupyterHub docker-compose configuration file
version: "2"

services:
  lightning:
    build:
      context: .
      dockerfile: Dockerfile-lightning
    image: lightning_server
    container_name: lightning
    ports:
      - "3000:3000"
    command: >
      npm start
  hub:
    build:
      context: .
      dockerfile: Dockerfile.jupyterhub
    image: jupyterhub
    container_name: jupyterhub
    volumes:
      # Bind Docker socket on the host so we can connect to the daemon from
      # within the container
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
      # Bind Docker volume on host for JupyterHub database and cookie secrets
      - "/data/docker/data:${DATA_VOLUME_CONTAINER}"
    ports:
      - "443:443"
    environment:
      # All containers will join this network
      DOCKER_NETWORK_NAME: ${DOCKER_NETWORK_NAME}
      # JupyterHub will spawn this Notebook image for users
      DOCKER_NOTEBOOK_IMAGE: ${DOCKER_NOTEBOOK_IMAGE}
      # Notebook directory inside user image
      DOCKER_NOTEBOOK_DIR: ${DOCKER_NOTEBOOK_DIR}
      # Using this run command (optional)
      DOCKER_SPAWN_CMD: ${DOCKER_SPAWN_CMD}
      # Required to authenticate users using GitHub OAuth
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      OAUTH_CALLBACK_URL: ${OAUTH_CALLBACK_URL}
      # JupyterHub proxy_auth_token
      CONFIGPROXY_AUTH_TOKEN: ${CONFIGPROXY_AUTH_TOKEN}
    command: >
      jupyterhub -f /srv/jupyterhub/jupyterhub_config.py
    links:
      - "lightning:lightningviz"
      - "mongodb:mongodb"
      - "postgres:postgres"

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - "/data/docker/mongodb:/data/db"

  postgres:
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - "/data/docker/postgres:${PG_DATA}"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      PG_DATA: ${PG_DATA}

  postgis:
    image: kartoza/postgis:9.5-2.2
    container_name: postgis
    ports:
      - "25432:25432"
volumes:
  data:
    external:
      name: ${DATA_VOLUME_HOST}

networks:
  default:
    external:
      name: ${DOCKER_NETWORK_NAME}
